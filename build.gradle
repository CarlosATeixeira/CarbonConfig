plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
	id 'net.darkhax.curseforgegradle' version '1.1.15'
    id 'com.modrinth.minotaur' version '2.+'
}

version = MC_VERSION + '-' + MOD_VERSION
group = project.maven_group


sourceSets {
    main {
        java {
 			srcDir "carbonconfig/src/main/java"
 			srcDir "src/main/java"
 		}
    }
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	flatDir {
       dirs("libs")
   	}
    maven {
        url "https://maven.terraformersmc.com/"
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.terraformersmc:modmenu:4.1.2"


	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	implementation ':Primitive Collections-0.8.9'
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
	from {
		duplicatesStrategy = DuplicatesStrategy.EXCLUDE
		configurations.runtimeClasspath.findAll { it.name.contains('Primitive Collections') }.collect { zipTree(it) }	
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}


modrinth {
	token = System.getenv("Modrinth_API_Token");
	projectId = 'carbon-config'
	versionName = archivesBaseName.replace(" ", "")+"-"+version
	versionNumber = MOD_VERSION
	versionType = RELEASE_TYPE
	uploadFile = jar
	gameVersions = [MC_VERSION_RAW]
	loaders = ['forge']
	
    def changelog = new File(projectDir, "/changelogs/"+MOD_VERSION.replace(".", "")+".md");
    changelog = changelog.exists() ? changelog.getText('UTF-8') : "";
}

task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) { 
	mustRunAfter assemble
	group 'publishing'
	description 'Publishes the mod to Curseforge'
	apiToken = System.getenv("Curseforge_API_Token")
		
	def mainFile = upload(898104, jar)
    mainFile.releaseType = RELEASE_TYPE
    mainFile.displayName = archivesBaseName.replace(" ", "")+"-"+version
    
    def changelog = new File(projectDir, "/changelogs/"+MOD_VERSION.replace(".", "")+".md");
    mainFile.changelog = changelog.exists() ? changelog.getText('UTF-8') : "";
    mainFile.changelogType = 'markdown'
    mainFile.addGameVersion(MC_VERSION_RAW, 'Server', 'Client')
    mainFile.addJavaVersion('Java 17')
}