plugins {
    id 'eclipse'
    id 'java-library'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
    id 'net.darkhax.curseforgegradle' version '1.1.15'
    id 'com.modrinth.minotaur' version '2.+'
}

apply plugin: 'java'
apply plugin: 'eclipse'

version = MC_VERSION + '-' + MOD_VERSION
group = 'carbonconfiglib' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'CarbonConfig'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

sourceSets {
    main {
        java {
 			srcDir "carbonconfig/src/main/java"
 			srcDir "src/main/java"
 		}
    }
}

minecraft {
    mappings channel: 'official', version: '1.21'
    reobf = false
    runs {
        client {
            workingDirectory project.file('run')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
    flatDir {
       dirs("libs")
   	}
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.21-51.0.17'
//	implementation fg.deobf("curse.maven:the-one-probe-245211:3965693")
    minecraftLibrary':Primitive Collections-0.8.9'
	implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "examplemod",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    dependsOn configurations.runtimeClasspath
	from {
		duplicatesStrategy = DuplicatesStrategy.EXCLUDE
		configurations.runtimeClasspath.findAll { it.name.equalsIgnoreCase('Primitive Collections-0.8.9.jar') }.collect { zipTree(it) }	
	}
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

task publishMods() {
	group 'publishing'
	description 'Publishes the mod to all Mod Distributors'
	doLast {
		System.out.println("Published Mods to Curseforge/Modrinth")
	}
}

publishMods.dependsOn('modrinth')
publishMods.dependsOn('curseforge')

modrinth {
	token = System.getenv("Modrinth_API_Token");
	projectId = 'carbon-config'
	versionName = archivesBaseName.replace(" ", "")+"-"+version
	versionNumber = MOD_VERSION
	versionType = RELEASE_TYPE
	uploadFile = jar
	gameVersions = [MC_VERSION]
	loaders = ['forge']
	
    def logs = new File(projectDir, "/changelogs/"+MOD_VERSION.replace(".", "")+".md");
    changelog = logs.exists() ? logs.getText('UTF-8') : "";
}

task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) { 
	mustRunAfter assemble
	group 'publishing'
	description 'Publishes the mod to Curseforge'
	apiToken = System.getenv("Curseforge_API_Token")
		
	def mainFile = upload(898104, jar)
    mainFile.releaseType = RELEASE_TYPE
    mainFile.displayName = archivesBaseName.replace(" ", "")+"-"+version
    
    def changelog = new File(projectDir, "/changelogs/"+MOD_VERSION.replace(".", "")+".md");
    mainFile.changelog = changelog.exists() ? changelog.getText('UTF-8') : "";
    mainFile.changelogType = 'markdown'
    mainFile.addGameVersion(MC_VERSION, 'Server', 'Client')
    mainFile.addJavaVersion('Java 21')
}